<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

    <!-- This security contraint makes all calls go through SSL -->
    <security-constraint>
        <web-resource-collection>
            <url-pattern>/*</url-pattern>
        </web-resource-collection>
        <user-data-constraint>
            <transport-guarantee>CONFIDENTIAL</transport-guarantee>
        </user-data-constraint>
    </security-constraint>
    
    <!-- any request going to rest/users can only be invoked by google accounts with
         admin,viewer, or developer access -->
     <security-constraint>
        <web-resource-collection>
            <web-resource-name>admin</web-resource-name>
            <url-pattern>/rest/users/*</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>admin</role-name>
        </auth-constraint>
    </security-constraint>
    
    <!-- Enables Jersey REST Service and Jackson JSON pojo mapping -->
    <servlet>
        <servlet-name>jersey-serlvet</servlet-name>
        <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>edu.ucsd.crbs.cws</param-value>
        </init-param>
        <init-param>
            <param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
            <param-value>true</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
 
    <!-- Any requests going to URL ../rest/* should be handled by Jersey -->
    <servlet-mapping>
        <servlet-name>jersey-serlvet</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>
  
    <!-- Runs Objectify clean up code for all requests -->
    <filter>
        <filter-name>ObjectifyFilter</filter-name>
        <filter-class>com.googlecode.objectify.ObjectifyFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>ObjectifyFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
  
  
    <!-- Any requests going to URL /workflowfile/* should be handled by HttpServlet -->
    <servlet>
        <servlet-name>workflowfile</servlet-name>
        <servlet-class>edu.ucsd.crbs.cws.servlet.WorkflowFile</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>workflowfile</servlet-name>
        <url-pattern>/workflowfile/*</url-pattern>
    </servlet-mapping>
    
     <!-- Any requests going to URL /workspacefile/* should be handled by HttpServlet -->
    <servlet>
        <servlet-name>workspacefile</servlet-name>
        <servlet-class>edu.ucsd.crbs.cws.servlet.WorkspaceFileServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>workspacefile</servlet-name>
        <url-pattern>/workspacefile/*</url-pattern>
    </servlet-mapping>
    
    <!-- Any requests going to URL /testdropdown/* should be handled by HttpServlet -->
    <servlet>
        <servlet-name>fakedropdown</servlet-name>
        <servlet-class>edu.ucsd.crbs.cws.servlet.FakeDropDown</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>fakedropdown</servlet-name>
        <url-pattern>/fakedropdown/*</url-pattern>
    </servlet-mapping>
   
</web-app>
